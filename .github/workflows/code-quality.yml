name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  analyze:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup .NET 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --configuration Release --no-restore
      
    - name: Run static analysis
      run: dotnet build --configuration Release --verbosity normal --property:TreatWarningsAsErrors=true
      continue-on-error: true
      
    - name: Check formatting
      run: dotnet format --verify-no-changes --verbosity diagnostic
      continue-on-error: true
      
    - name: Dependency vulnerability check
      run: |
        # Check for known vulnerabilities in dependencies
        dotnet list src/PixPin.Core/PixPin.Core.csproj package --vulnerable --include-transitive
        echo "Dependency vulnerability check completed"
      continue-on-error: true
        
    - name: Package validation
      run: |
        # Create package
        dotnet pack src/PixPin.Core/PixPin.Core.csproj --configuration Release --output ./validate-packages
        echo "Package created successfully"
        
        # Basic package validation
        $packages = Get-ChildItem ./validate-packages -Filter "*.nupkg"
        foreach ($package in $packages) {
            Write-Host "Validating package: $($package.Name)"
            Write-Host "Size: $([math]::Round($package.Length / 1KB, 2)) KB"
        }
      shell: pwsh
      continue-on-error: true
